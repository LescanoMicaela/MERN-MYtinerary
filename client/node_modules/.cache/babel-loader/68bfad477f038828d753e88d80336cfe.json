{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lesca\\\\Desktop\\\\MERNcourse3\\\\my-app\\\\client\\\\src\\\\components\\\\cities.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cities)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cities: []\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/cities');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              _this.setState({\n                response: body\n              });\n\n              return _context.abrupt(\"return\", body);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          cities: res\n        });\n      }).then(function (res) {\n        return console.log(_this2.state.cities[0]);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var posts = this.props.posts;\n      return React.createElement(\"div\", {\n        className: \"cityList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(List, {\n        class: \"citiesList\",\n        cities: this.state.cities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nexport function List(props) {\n  return React.createElement(\"div\", {\n    className: props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.cities.map(function (city, index) {\n    return React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, city.name);\n  }));\n}\nexport function Filter(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Filter current cities\"), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //returns an object trhough the store state\n  return {\n    post: state.posts\n  };\n}; //we use connect to return a higher order component ( we connect the store with the component)\n//we will pass the state intp the connect function\n\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\MERNcourse3\\my-app\\client\\src\\components\\cities.js"],"names":["React","connect","Cities","state","cities","callApi","fetch","response","json","body","status","Error","message","setState","then","res","console","log","catch","err","props","posts","Component","List","class","map","city","index","name","Filter","mapStateToProps","post"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAGQC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;UAUNC,O;;;;6BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeC,KAAK,CAAC,SAAD,CADpB;;AAAA;AACFC,cAAAA,QADE;AAAA;AAAA,qBAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEFC,cAAAA,IAFE;;AAAA,oBAGJF,QAAQ,CAACG,MAAT,KAAoB,GAHhB;AAAA;AAAA;AAAA;;AAAA,oBAG2BC,KAAK,CAACF,IAAI,CAACG,OAAN,CAHhC;;AAAA;AAIR,oBAAKC,QAAL,CAAc;AAAEN,gBAAAA,QAAQ,EAAEE;AAAZ,eAAd;;AAJQ,+CAKDA,IALC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAPU;AAAA;;AAClB,WAAKJ,OAAL,GACGS,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACF,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAEW;AAAV,SAAd,CAAJ;AAAA,OADX,EAEGD,IAFH,CAEQ,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,MAAI,CAACd,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAZ,CAAJ;AAAA,OAFX,EAGGc,KAHH,CAGS,UAAAC,GAAG;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,OAHZ;AAKD;;;6BAUQ;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAjB;AADO,UAEDC,KAFC,GAEQ,KAAKD,KAFb,CAEDC,KAFC;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,YAAZ;AAAyB,QAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADF;AAMD;;;;EA7BgBJ,KAAK,CAACsB,S;;AAgCzB,OAAO,SAASC,IAAT,CAAcH,KAAd,EAAqB;AACxB,SACE;AAAK,IAAA,SAAS,EAAEA,KAAK,CAACI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAAChB,MAAN,CAAaqB,GAAb,CAAiB,UAACC,IAAD,EAAMC,KAAN;AAAA,WAChB;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,IADR,CADgB;AAAA,GAAjB,CADH,CADF;AASD;AAED,OAAO,SAASC,MAAT,CAAgBT,KAAhB,EAAsB;AACzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ;AAMH;;AAED,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAC3B,KAAD,EAAS;AAC/B;AACA,SAAM;AACJ4B,IAAAA,IAAI,EAAC5B,KAAK,CAACkB;AADP,GAAN;AAGD,CALD,C,CAOA;AACA;;;AACA,eAAepB,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,MAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n  class Cities extends React.Component{\r\n    state = {\r\n        cities: [],\r\n      };\r\n      componentDidMount() {\r\n        this.callApi()\r\n          .then(res => this.setState({ cities: res}))\r\n          .then(res => console.log(this.state.cities[0]))\r\n          .catch(err => console.log(err));\r\n         \r\n      }\r\n      callApi = async () => {\r\n        const response = await fetch('/cities');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n        this.setState({ response: body})\r\n        return body;\r\n      };\r\n \r\n      \r\n      render() {\r\n        console.log(this.props);\r\n        const{posts} = this.props;\r\n        return (\r\n          <div className=\"cityList\" >\r\n            <Filter />\r\n             <List class=\"citiesList\" cities={this.state.cities} />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  \r\n    export function List(props) {\r\n        return  (\r\n          <div className={props.class}>\r\n            {props.cities.map((city,index) =>\r\n              <p key={index}>\r\n                {city.name}\r\n              </p>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      export function Filter(props){\r\n          return(\r\n              <div>\r\n                <p>Filter current cities</p> \r\n                <input type=\"text\"></input>\r\n              </div>\r\n          )\r\n      }\r\n\r\n      const mapStateToProps = (state)=>{\r\n        //returns an object trhough the store state\r\n        return{\r\n          post:state.posts\r\n        }\r\n      }\r\n\r\n      //we use connect to return a higher order component ( we connect the store with the component)\r\n      //we will pass the state intp the connect function\r\n      export default connect(mapStateToProps)(Cities);"]},"metadata":{},"sourceType":"module"}